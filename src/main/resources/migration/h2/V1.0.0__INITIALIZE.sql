;              
CREATE USER IF NOT EXISTS CDEIO SALT 'bcfc3ac6d7d7c714' HASH 'cbc51a6d9d0b043fa28dced7a0d2816c3a074a66053ad2d6501f9bdf80a640c4' ADMIN;         
    
    
CREATE CACHED TABLE PUBLIC.CDE_ACCOUNT(
    F_ID VARCHAR(255) NOT NULL,
    F_ACCOUNT_NAME VARCHAR(30),
    F_DELETED BOOLEAN,
    F_DISABLED BOOLEAN,
    F_EMAIL VARCHAR(100),
    F_MOBILE VARCHAR(30),
    F_PASSWORD VARCHAR(60),
    F_REALNAME VARCHAR(30),
    F_TELEPHONE VARCHAR(30),
    F_DEPARTMENT_ID VARCHAR(255)
);            
ALTER TABLE PUBLIC.CDE_ACCOUNT ADD CONSTRAINT PUBLIC.CONSTRAINT_4 PRIMARY KEY(F_ID);           
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_ACCOUNT;              
CREATE CACHED TABLE PUBLIC.CDE_ATTACHMENT(
    F_ID VARCHAR(255) NOT NULL,
    F_CONTENT_TYPE VARCHAR(255),
    F_CREATE_TIME TIMESTAMP,
    F_DRAFT BOOLEAN,
    F_FILENAME VARCHAR(255),
    F_PATH VARCHAR(255)
);          
ALTER TABLE PUBLIC.CDE_ATTACHMENT ADD CONSTRAINT PUBLIC.CONSTRAINT_73 PRIMARY KEY(F_ID);       
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_ATTACHMENT;           
CREATE CACHED TABLE PUBLIC.CDE_DEPARTMENT(
    F_ID VARCHAR(255) NOT NULL,
    F_CODE VARCHAR(3000),
    F_DELETED BOOLEAN,
    F_NAME VARCHAR(30),
    F_PATH VARCHAR(3000),
    F_RANK INTEGER,
    F_PARENT_ID VARCHAR(255)
);              
ALTER TABLE PUBLIC.CDE_DEPARTMENT ADD CONSTRAINT PUBLIC.CONSTRAINT_1 PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_DEPARTMENT;           
CREATE CACHED TABLE PUBLIC.CDE_MENUITEM(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_ICON VARCHAR(100),
    F_NAME VARCHAR(100),
    F_OPENED BOOLEAN,
    F_OPTION VARCHAR(2000),
    F_PATH VARCHAR(200),
    F_RANK INTEGER,
    F_PARENT_ID VARCHAR(255)
);            
ALTER TABLE PUBLIC.CDE_MENUITEM ADD CONSTRAINT PUBLIC.CONSTRAINT_78 PRIMARY KEY(F_ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_MENUITEM;             
CREATE CACHED TABLE PUBLIC.CDE_PERMISSION(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100),
    F_SCAFFOLD BOOLEAN,
    F_VALUE VARCHAR(200)
);              
ALTER TABLE PUBLIC.CDE_PERMISSION ADD CONSTRAINT PUBLIC.CONSTRAINT_C PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_PERMISSION;           
CREATE CACHED TABLE PUBLIC.CDE_ROLE(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_SCAFFOLD BOOLEAN,
    F_NAME VARCHAR(30),
    F_DEPARTMENT_ID VARCHAR(255)
);             
ALTER TABLE PUBLIC.CDE_ROLE ADD CONSTRAINT PUBLIC.CONSTRAINT_B8 PRIMARY KEY(F_ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_ROLE; 
CREATE CACHED TABLE PUBLIC.CDE_ROLE_ACCOUNT(
    F_ACCOUNT_ID VARCHAR(255) NOT NULL,
    F_ROLE_ID VARCHAR(255) NOT NULL
);    
ALTER TABLE PUBLIC.CDE_ROLE_ACCOUNT ADD CONSTRAINT PUBLIC.CONSTRAINT_A1 PRIMARY KEY(F_ACCOUNT_ID, F_ROLE_ID);  
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_ROLE_ACCOUNT;         
CREATE CACHED TABLE PUBLIC.CDE_ROLE_PERMISSION(
    F_ROLE_ID VARCHAR(255) NOT NULL,
    F_PERMISSION_ID VARCHAR(255) NOT NULL
);              
ALTER TABLE PUBLIC.CDE_ROLE_PERMISSION ADD CONSTRAINT PUBLIC.CONSTRAINT_19 PRIMARY KEY(F_ROLE_ID, F_PERMISSION_ID);            
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_ROLE_PERMISSION;      
CREATE CACHED TABLE PUBLIC.CDE_SETTINGITEM(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(200),
    F_VALUE VARCHAR(1000)
);    
ALTER TABLE PUBLIC.CDE_SETTINGITEM ADD CONSTRAINT PUBLIC.CONSTRAINT_2 PRIMARY KEY(F_ID);       
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CDE_SETTINGITEM;          
CREATE CACHED TABLE PUBLIC.SA_BAR(
    F_ID VARCHAR(255) NOT NULL,
    F_ADDRESS VARCHAR(255),
    F_AGE INTEGER,
    F_EMAIL VARCHAR(255),
    F_MOBILE VARCHAR(255),
    F_NAME VARCHAR(500),
    F_FOO VARCHAR(255),
    F_PARENT VARCHAR(255)
);           
ALTER TABLE PUBLIC.SA_BAR ADD CONSTRAINT PUBLIC.CONSTRAINT_9 PRIMARY KEY(F_ID);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_BAR;   
CREATE CACHED TABLE PUBLIC.SA_BASIC_TODO(
    F_ID VARCHAR(255) NOT NULL,
    F_DESCRIPTION VARCHAR(350),
    F_NAME VARCHAR(60)
);            
ALTER TABLE PUBLIC.SA_BASIC_TODO ADD CONSTRAINT PUBLIC.CONSTRAINT_6 PRIMARY KEY(F_ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_BASIC_TODO;            
CREATE CACHED TABLE PUBLIC.SA_EXTENSION_ADVANCED_TREE(
    F_ID VARCHAR(255) NOT NULL,
    F_CREATED_TIME TIMESTAMP,
    F_CREATOR VARCHAR(50),
    F_CREATOR_NAME VARCHAR(30),
    F_LAST_MODIFIED_TIME TIMESTAMP,
    F_LAST_MODIFIER VARCHAR(50),
    F_LAST_MODIFIER_NAME VARCHAR(30),
    F_NAME VARCHAR(500),
    F_TYPE VARCHAR(255),
    F_PARENT_ID VARCHAR(255)
);   
ALTER TABLE PUBLIC.SA_EXTENSION_ADVANCED_TREE ADD CONSTRAINT PUBLIC.CONSTRAINT_6E PRIMARY KEY(F_ID);           
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_EXTENSION_ADVANCED_TREE;               
CREATE CACHED TABLE PUBLIC.SA_FIELD_ACCOUNT(
    F_ID VARCHAR(255) NOT NULL,
    F_ACCOUNT VARCHAR(255),
    F_CREDITCARD VARCHAR(255),
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(100),
    F_PASSWORD VARCHAR(255),
    F_PASSWORD2 VARCHAR(255),
    F_SALARY DOUBLE,
    F_URL VARCHAR(255),
    F_YEAR INTEGER
);       
ALTER TABLE PUBLIC.SA_FIELD_ACCOUNT ADD CONSTRAINT PUBLIC.CONSTRAINT_A8 PRIMARY KEY(F_ID);     
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FIELD_ACCOUNT;         
CREATE CACHED TABLE PUBLIC.SA_FIELD_PROJECT(
    F_ID VARCHAR(255) NOT NULL,
    F_NAME VARCHAR(80)
);         
ALTER TABLE PUBLIC.SA_FIELD_PROJECT ADD CONSTRAINT PUBLIC.CONSTRAINT_D PRIMARY KEY(F_ID);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FIELD_PROJECT;         
CREATE CACHED TABLE PUBLIC.SA_FIELD_TAG(
    F_ID VARCHAR(255) NOT NULL,
    F_CREATED_TIME TIMESTAMP,
    F_CREATOR VARCHAR(50),
    F_CREATOR_NAME VARCHAR(30),
    F_LAST_MODIFIED_TIME TIMESTAMP,
    F_LAST_MODIFIER VARCHAR(50),
    F_LAST_MODIFIER_NAME VARCHAR(30),
    F_DESC VARCHAR(260),
    F_NAME VARCHAR(30),
    F_PARENT VARCHAR(255)
);     
ALTER TABLE PUBLIC.SA_FIELD_TAG ADD CONSTRAINT PUBLIC.CONSTRAINT_E PRIMARY KEY(F_ID);          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FIELD_TAG;             
CREATE CACHED TABLE PUBLIC.SA_FIELD_TODO(
    F_ID VARCHAR(255) NOT NULL,
    F_DESCRIPTION VARCHAR(4000),
    F_LEVEL VARCHAR(255),
    F_NAME VARCHAR(60),
    F_START_TIME DATE,
    F_ATTCHMENT_ID VARCHAR(255),
    F_PROJECT VARCHAR(255),
    F_TAG VARCHAR(255)
);     
ALTER TABLE PUBLIC.SA_FIELD_TODO ADD CONSTRAINT PUBLIC.CONSTRAINT_CA PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FIELD_TODO;            
CREATE CACHED TABLE PUBLIC.SA_FIELD_USER(
    F_ID VARCHAR(255) NOT NULL,
    F_BIRTHDAY TIMESTAMP,
    F_CODE VARCHAR(500),
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(80)
);               
ALTER TABLE PUBLIC.SA_FIELD_USER ADD CONSTRAINT PUBLIC.CONSTRAINT_CA8 PRIMARY KEY(F_ID);       
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FIELD_USER;            
CREATE CACHED TABLE PUBLIC.SA_FOO(
    F_ID VARCHAR(255) NOT NULL,
    F_CREATE_TIME TIMESTAMP,
    F_DESC VARCHAR(2000),
    F_DISABLED BOOLEAN,
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(20),
    F_STATUS INTEGER,
    ATTACHMENT_ID VARCHAR(255)
);    
ALTER TABLE PUBLIC.SA_FOO ADD CONSTRAINT PUBLIC.CONSTRAINT_91 PRIMARY KEY(F_ID);               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FOO;   
CREATE CACHED TABLE PUBLIC.SA_FORM_PROJECT(
    F_ID VARCHAR(255) NOT NULL,
    F_COST DECIMAL(23, 2),
    F_DESC VARCHAR(255),
    F_INTRO VARCHAR(255),
    F_NAME VARCHAR(255),
    F_PEOPLE VARCHAR(255),
    F_START_DATE DATE
);         
ALTER TABLE PUBLIC.SA_FORM_PROJECT ADD CONSTRAINT PUBLIC.CONSTRAINT_8 PRIMARY KEY(F_ID);       
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FORM_PROJECT;          
CREATE CACHED TABLE PUBLIC.SA_FORM_TODO(
    F_ID VARCHAR(255) NOT NULL,
    F_DESCRIPTION VARCHAR(350),
    F_NAME VARCHAR(60),
    F_START_TIME DATE,
    F_STATUS VARCHAR(255)
);           
ALTER TABLE PUBLIC.SA_FORM_TODO ADD CONSTRAINT PUBLIC.CONSTRAINT_7A PRIMARY KEY(F_ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FORM_TODO;             
CREATE CACHED TABLE PUBLIC.SA_FORM_USER(
    F_ID VARCHAR(255) NOT NULL,
    F_BIRTHDAY TIMESTAMP,
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(80),
    F_CODE VARCHAR(500)
);
ALTER TABLE PUBLIC.SA_FORM_USER ADD CONSTRAINT PUBLIC.CONSTRAINT_7A4 PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_FORM_USER;             
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_GATEWAY_EXCLUSIVE(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255),
    WORKINGLIFE INTEGER
);      
ALTER TABLE PUBLIC.SA_GENERATE_BPM_GATEWAY_EXCLUSIVE ADD CONSTRAINT PUBLIC.CONSTRAINT_F PRIMARY KEY(F_ID);     
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_GATEWAY_EXCLUSIVE;        
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_GATEWAY_PARALLEL(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255)
);
ALTER TABLE PUBLIC.SA_GENERATE_BPM_GATEWAY_PARALLEL ADD CONSTRAINT PUBLIC.CONSTRAINT_4A PRIMARY KEY(F_ID);     
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_GATEWAY_PARALLEL;         
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_LISTENER_EXECUTION(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255)
);              
ALTER TABLE PUBLIC.SA_GENERATE_BPM_LISTENER_EXECUTION ADD CONSTRAINT PUBLIC.CONSTRAINT_64 PRIMARY KEY(F_ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_LISTENER_EXECUTION;       
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_LISTENER_TASK(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255)
);   
ALTER TABLE PUBLIC.SA_GENERATE_BPM_LISTENER_TASK ADD CONSTRAINT PUBLIC.CONSTRAINT_67 PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_LISTENER_TASK;            
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_MULTIPLE_SUBPROCESS(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    CYCLE INTEGER,
    DESCRIPTION VARCHAR(255),
    MONEY INTEGER,
    NAME VARCHAR(255),
    PLANNER VARCHAR(255)
);      
ALTER TABLE PUBLIC.SA_GENERATE_BPM_MULTIPLE_SUBPROCESS ADD CONSTRAINT PUBLIC.CONSTRAINT_68 PRIMARY KEY(F_ID);  
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_MULTIPLE_SUBPROCESS;      
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_MULTIPLE_USERTASK(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    CYCLE INTEGER,
    DESCRIPTION VARCHAR(255),
    MONEY INTEGER,
    NAME VARCHAR(255),
    PLANNER VARCHAR(255)
);        
ALTER TABLE PUBLIC.SA_GENERATE_BPM_MULTIPLE_USERTASK ADD CONSTRAINT PUBLIC.CONSTRAINT_98 PRIMARY KEY(F_ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_MULTIPLE_USERTASK;        
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_SUBPROCESS_EMBEDDED(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255),
    WORKINGLIFE INTEGER
);    
ALTER TABLE PUBLIC.SA_GENERATE_BPM_SUBPROCESS_EMBEDDED ADD CONSTRAINT PUBLIC.CONSTRAINT_BE PRIMARY KEY(F_ID);  
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_SUBPROCESS_EMBEDDED;      
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_TASK_CALLBACK(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255)
);   
ALTER TABLE PUBLIC.SA_GENERATE_BPM_TASK_CALLBACK ADD CONSTRAINT PUBLIC.CONSTRAINT_C1 PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_TASK_CALLBACK;            
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_TASK_REJECT(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255)
);     
ALTER TABLE PUBLIC.SA_GENERATE_BPM_TASK_REJECT ADD CONSTRAINT PUBLIC.CONSTRAINT_AA PRIMARY KEY(F_ID);          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_TASK_REJECT;              
CREATE CACHED TABLE PUBLIC.SA_GENERATE_BPM_TASK_USERTASK(
    F_ID VARCHAR(255) NOT NULL,
    PROCESS_DEFINITION_ID VARCHAR(255),
    PROCESS_INSTANCE_ID VARCHAR(255),
    STATUS VARCHAR(255),
    SUBMITTER VARCHAR(255),
    ADDRESS VARCHAR(255),
    AGE INTEGER,
    DESCRIPTION VARCHAR(255),
    NAME VARCHAR(255),
    PHONE VARCHAR(255),
    SEX VARCHAR(255)
);   
ALTER TABLE PUBLIC.SA_GENERATE_BPM_TASK_USERTASK ADD CONSTRAINT PUBLIC.CONSTRAINT_BB PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GENERATE_BPM_TASK_USERTASK;            
CREATE CACHED TABLE PUBLIC.SA_GRID_TODO(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(255),
    F_NAME VARCHAR(255)
);   
ALTER TABLE PUBLIC.SA_GRID_TODO ADD CONSTRAINT PUBLIC.CONSTRAINT_E8 PRIMARY KEY(F_ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GRID_TODO;             
CREATE CACHED TABLE PUBLIC.SA_GRID_USER(
    F_ID VARCHAR(255) NOT NULL,
    F_BIRTHDAY TIMESTAMP,
    F_CODE VARCHAR(500),
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(80),
    F_SEX VARCHAR(10)
);         
ALTER TABLE PUBLIC.SA_GRID_USER ADD CONSTRAINT PUBLIC.CONSTRAINT_E81 PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_GRID_USER;             
CREATE CACHED TABLE PUBLIC.SA_HOOKS_TODO(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(255),
    F_NAME VARCHAR(255)
);  
ALTER TABLE PUBLIC.SA_HOOKS_TODO ADD CONSTRAINT PUBLIC.CONSTRAINT_20 PRIMARY KEY(F_ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_HOOKS_TODO;            
CREATE CACHED TABLE PUBLIC.SA_SCAFFOLD_BASIC_TREE(
    F_ID VARCHAR(255) NOT NULL,
    F_CREATED_TIME TIMESTAMP,
    F_CREATOR VARCHAR(50),
    F_CREATOR_NAME VARCHAR(30),
    F_LAST_MODIFIED_TIME TIMESTAMP,
    F_LAST_MODIFIER VARCHAR(50),
    F_LAST_MODIFIER_NAME VARCHAR(30),
    F_NAME VARCHAR(500),
    F_PARENT_ID VARCHAR(255)
);
ALTER TABLE PUBLIC.SA_SCAFFOLD_BASIC_TREE ADD CONSTRAINT PUBLIC.CONSTRAINT_4AC PRIMARY KEY(F_ID);              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_SCAFFOLD_BASIC_TREE;   
CREATE CACHED TABLE PUBLIC.SA_SCAFFOLD_OPERATE_BUTTON(
    F_ID VARCHAR(255) NOT NULL,
    F_DESCRIPTION VARCHAR(255),
    F_NAME VARCHAR(255)
);              
ALTER TABLE PUBLIC.SA_SCAFFOLD_OPERATE_BUTTON ADD CONSTRAINT PUBLIC.CONSTRAINT_5 PRIMARY KEY(F_ID);            
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_SCAFFOLD_OPERATE_BUTTON;               
CREATE CACHED TABLE PUBLIC.SA_SENIORGRID_USER(
    F_ID VARCHAR(255) NOT NULL,
    F_BIRTHDAY TIMESTAMP,
    F_CODE INTEGER,
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(80),
    F_SEX VARCHAR(10)
);        
ALTER TABLE PUBLIC.SA_SENIORGRID_USER ADD CONSTRAINT PUBLIC.CONSTRAINT_F2 PRIMARY KEY(F_ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_SENIORGRID_USER;       
CREATE CACHED TABLE PUBLIC.SA_SERVICE_DATAFILE(
    F_ID VARCHAR(255) NOT NULL,
    F_CODE VARCHAR(500),
    F_NAME VARCHAR(500),
    F_SUMMARY VARCHAR(4000),
    F_ATTACHMENT_ID VARCHAR(255)
);             
ALTER TABLE PUBLIC.SA_SERVICE_DATAFILE ADD CONSTRAINT PUBLIC.CONSTRAINT_F9 PRIMARY KEY(F_ID);  
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_SERVICE_DATAFILE;      
CREATE CACHED TABLE PUBLIC.SA_SERVICE_PERSON(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100),
    F_PASSWORD VARCHAR(60)
); 
ALTER TABLE PUBLIC.SA_SERVICE_PERSON ADD CONSTRAINT PUBLIC.CONSTRAINT_69 PRIMARY KEY(F_ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_SERVICE_PERSON;        
CREATE CACHED TABLE PUBLIC.SA_SERVICE_TASK(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100)
);               
ALTER TABLE PUBLIC.SA_SERVICE_TASK ADD CONSTRAINT PUBLIC.CONSTRAINT_9F PRIMARY KEY(F_ID);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_SERVICE_TASK;          
CREATE CACHED TABLE PUBLIC.SA_TAG(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(260),
    F_NAME VARCHAR(30)
);          
ALTER TABLE PUBLIC.SA_TAG ADD CONSTRAINT PUBLIC.CONSTRAINT_916 PRIMARY KEY(F_ID);              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_TAG;   
CREATE CACHED TABLE PUBLIC.SA_TEST(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100)
);       
ALTER TABLE PUBLIC.SA_TEST ADD CONSTRAINT PUBLIC.CONSTRAINT_9A PRIMARY KEY(F_ID);              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_TEST;  
CREATE CACHED TABLE PUBLIC.SA_TEST_TREE(
    F_ID VARCHAR(255) NOT NULL,
    F_NAME VARCHAR(200),
    F_PARENT VARCHAR(255)
); 
ALTER TABLE PUBLIC.SA_TEST_TREE ADD CONSTRAINT PUBLIC.CONSTRAINT_55 PRIMARY KEY(F_ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_TEST_TREE;             
CREATE CACHED TABLE PUBLIC.SA_TODO(
    F_ID VARCHAR(255) NOT NULL,
    F_DESCRIPTION VARCHAR(350),
    F_NAME VARCHAR(60),
    F_BASICUSER VARCHAR(255),
    F_PARENT_ID VARCHAR(255)
);      
ALTER TABLE PUBLIC.SA_TODO ADD CONSTRAINT PUBLIC.CONSTRAINT_9AF PRIMARY KEY(F_ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_TODO;  
CREATE CACHED TABLE PUBLIC.SA_UI_BASIC(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100)
);   
ALTER TABLE PUBLIC.SA_UI_BASIC ADD CONSTRAINT PUBLIC.CONSTRAINT_8B PRIMARY KEY(F_ID);          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_UI_BASIC;              
CREATE CACHED TABLE PUBLIC.SA_UI_CALL_BACK(
    F_ID VARCHAR(255) NOT NULL,
    F_DETAIL_TYPE VARCHAR(100),
    F_NAME VARCHAR(100),
    F_TYPE VARCHAR(100),
    F_ROUTER_ID VARCHAR(255)
);  
ALTER TABLE PUBLIC.SA_UI_CALL_BACK ADD CONSTRAINT PUBLIC.CONSTRAINT_11 PRIMARY KEY(F_ID);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_UI_CALL_BACK;          
CREATE CACHED TABLE PUBLIC.SA_UI_CUSTOM_FORM(
    F_ID VARCHAR(255) NOT NULL,
    F_APPLICANT VARCHAR(100),
    F_APPLY_TIME DATE,
    F_AUX_APPEARANCE BOOLEAN,
    F_AUX_REMARK VARCHAR(100),
    F_DESC VARCHAR(2000),
    F_MAIN_APPEARANCE BOOLEAN,
    F_MAIN_REMARK VARCHAR(100),
    F_NAME VARCHAR(100)
);            
ALTER TABLE PUBLIC.SA_UI_CUSTOM_FORM ADD CONSTRAINT PUBLIC.CONSTRAINT_BA PRIMARY KEY(F_ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_UI_CUSTOM_FORM;        
CREATE CACHED TABLE PUBLIC.SA_UI_INLINE_GRID(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100),
    F_STATUS VARCHAR(100),
    F_CALL_BACK_ID VARCHAR(255)
); 
ALTER TABLE PUBLIC.SA_UI_INLINE_GRID ADD CONSTRAINT PUBLIC.CONSTRAINT_C2 PRIMARY KEY(F_ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_UI_INLINE_GRID;        
CREATE CACHED TABLE PUBLIC.SA_UI_ROUTER(
    F_ID VARCHAR(255) NOT NULL,
    F_DESC VARCHAR(2000),
    F_NAME VARCHAR(100)
);  
ALTER TABLE PUBLIC.SA_UI_ROUTER ADD CONSTRAINT PUBLIC.CONSTRAINT_FF PRIMARY KEY(F_ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_UI_ROUTER;             
CREATE CACHED TABLE PUBLIC.SA_USER(
    F_ID VARCHAR(255) NOT NULL,
    F_BIRTHDAY TIMESTAMP,
    F_CODE VARCHAR(500),
    F_EMAIL VARCHAR(255),
    F_NAME VARCHAR(80)
);     
ALTER TABLE PUBLIC.SA_USER ADD CONSTRAINT PUBLIC.CONSTRAINT_9AF2 PRIMARY KEY(F_ID);            
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_USER;  
CREATE CACHED TABLE PUBLIC.SA_VALIDATORS_USER(
    F_ID VARCHAR(255) NOT NULL,
    F_NAME VARCHAR(255),
    F_STATUS VARCHAR(255)
);           
ALTER TABLE PUBLIC.SA_VALIDATORS_USER ADD CONSTRAINT PUBLIC.CONSTRAINT_42 PRIMARY KEY(F_ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.SA_VALIDATORS_USER;       
CREATE CACHED TABLE PUBLIC.ZDA_FIELD_TODO_ATTACHMENT(
    F_TODO_ID VARCHAR(255) NOT NULL,
    F_ATTACHMENT_ID VARCHAR(255) NOT NULL
);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ZDA_FIELD_TODO_ATTACHMENT;
CREATE CACHED TABLE PUBLIC.ZDA_FIELD_TODO_USER(
    F_TODO_ID VARCHAR(255) NOT NULL,
    F_USER_ID VARCHAR(255) NOT NULL
);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ZDA_FIELD_TODO_USER;      
CREATE CACHED TABLE PUBLIC.ZDA_FORM_TODO_USER(
    F_TODO_ID VARCHAR(255) NOT NULL,
    F_USER_ID VARCHAR(255) NOT NULL
);     
       
          
ALTER TABLE PUBLIC.ZDA_FIELD_TODO_ATTACHMENT ADD CONSTRAINT PUBLIC.UK_O1GVOXJL3O468FGJ3AE0MSOH2 UNIQUE(F_ATTACHMENT_ID);       
ALTER TABLE PUBLIC.SA_FIELD_TODO ADD CONSTRAINT PUBLIC.FK_I19KOOEKNVJ1JHQFQWJYRMXQU FOREIGN KEY(F_ATTCHMENT_ID) REFERENCES PUBLIC.CDE_ATTACHMENT(F_ID) NOCHECK;
ALTER TABLE PUBLIC.CDE_ROLE ADD CONSTRAINT PUBLIC.FK_BOMGP52WCXA6P5B22RPJXEUGB FOREIGN KEY(F_DEPARTMENT_ID) REFERENCES PUBLIC.CDE_DEPARTMENT(F_ID) NOCHECK;    
ALTER TABLE PUBLIC.CDE_ROLE_ACCOUNT ADD CONSTRAINT PUBLIC.FK_1CWLY3TMP1U1QQ9NC371NTH0V FOREIGN KEY(F_ROLE_ID) REFERENCES PUBLIC.CDE_ROLE(F_ID) NOCHECK;        
ALTER TABLE PUBLIC.SA_FIELD_TODO ADD CONSTRAINT PUBLIC.FK_D14KCCN0YL9UJA0DJ9DW3PM0I FOREIGN KEY(F_TAG) REFERENCES PUBLIC.SA_FIELD_TAG(F_ID) NOCHECK;           
ALTER TABLE PUBLIC.CDE_ROLE_PERMISSION ADD CONSTRAINT PUBLIC.FK_HUVP2UPFUEVK02659KJ2I5MI0 FOREIGN KEY(F_PERMISSION_ID) REFERENCES PUBLIC.CDE_PERMISSION(F_ID) NOCHECK;         
ALTER TABLE PUBLIC.CDE_ROLE_ACCOUNT ADD CONSTRAINT PUBLIC.FK_DHB02HWGD5R5467SKQQ93LCUI FOREIGN KEY(F_ACCOUNT_ID) REFERENCES PUBLIC.CDE_ACCOUNT(F_ID) NOCHECK;  
ALTER TABLE PUBLIC.SA_UI_CALL_BACK ADD CONSTRAINT PUBLIC.FK_S2TPEPOIMGY5QM40GIWTA93DI FOREIGN KEY(F_ROUTER_ID) REFERENCES PUBLIC.SA_UI_ROUTER(F_ID) NOCHECK;   
ALTER TABLE PUBLIC.ZDA_FIELD_TODO_USER ADD CONSTRAINT PUBLIC.FK_AA40RNH8J3PQOQX370SGCNQEE FOREIGN KEY(F_USER_ID) REFERENCES PUBLIC.SA_FIELD_USER(F_ID) NOCHECK;
ALTER TABLE PUBLIC.SA_TODO ADD CONSTRAINT PUBLIC.FK_EQ12F5MYGDHW74D0JU7TB4KBI FOREIGN KEY(F_PARENT_ID) REFERENCES PUBLIC.SA_TODO(F_ID) NOCHECK;
ALTER TABLE PUBLIC.SA_UI_INLINE_GRID ADD CONSTRAINT PUBLIC.FK_SCR7307GL2AT3W03C7QVB536J FOREIGN KEY(F_CALL_BACK_ID) REFERENCES PUBLIC.SA_UI_CALL_BACK(F_ID) NOCHECK;           
ALTER TABLE PUBLIC.SA_FIELD_TODO ADD CONSTRAINT PUBLIC.FK_P8XXEDLWRMX9B76W5PNTSW1K4 FOREIGN KEY(F_PROJECT) REFERENCES PUBLIC.SA_FIELD_PROJECT(F_ID) NOCHECK;   
ALTER TABLE PUBLIC.SA_TEST_TREE ADD CONSTRAINT PUBLIC.FK_HA8GUNE97Y1UUHA16MDSU9O27 FOREIGN KEY(F_PARENT) REFERENCES PUBLIC.SA_TEST_TREE(F_ID) NOCHECK;         
ALTER TABLE PUBLIC.ZDA_FIELD_TODO_ATTACHMENT ADD CONSTRAINT PUBLIC.FK_HNP9T1MVB8NDDDOTCC5M5PYD3 FOREIGN KEY(F_TODO_ID) REFERENCES PUBLIC.SA_FIELD_TODO(F_ID) NOCHECK;          
ALTER TABLE PUBLIC.CDE_ACCOUNT ADD CONSTRAINT PUBLIC.FK_GK10G5O8P3OAW2DTG7JC71PQ6 FOREIGN KEY(F_DEPARTMENT_ID) REFERENCES PUBLIC.CDE_DEPARTMENT(F_ID) NOCHECK; 
ALTER TABLE PUBLIC.ZDA_FIELD_TODO_ATTACHMENT ADD CONSTRAINT PUBLIC.FK_O1GVOXJL3O468FGJ3AE0MSOH2 FOREIGN KEY(F_ATTACHMENT_ID) REFERENCES PUBLIC.CDE_ATTACHMENT(F_ID) NOCHECK;   
ALTER TABLE PUBLIC.SA_SERVICE_DATAFILE ADD CONSTRAINT PUBLIC.FK_7FYO9JDU79DNORVDXPIDEXLXM FOREIGN KEY(F_ATTACHMENT_ID) REFERENCES PUBLIC.CDE_ATTACHMENT(F_ID) NOCHECK;         
ALTER TABLE PUBLIC.SA_SCAFFOLD_BASIC_TREE ADD CONSTRAINT PUBLIC.FK_7KEBQMHVBRHK20S4L2V6YES6K FOREIGN KEY(F_PARENT_ID) REFERENCES PUBLIC.SA_SCAFFOLD_BASIC_TREE(F_ID) NOCHECK;  
ALTER TABLE PUBLIC.CDE_ROLE_PERMISSION ADD CONSTRAINT PUBLIC.FK_IOXWDKT2I1S51J7QY5SS9TE86 FOREIGN KEY(F_ROLE_ID) REFERENCES PUBLIC.CDE_ROLE(F_ID) NOCHECK;     
ALTER TABLE PUBLIC.SA_BAR ADD CONSTRAINT PUBLIC.FK_L6LBRN7Y71B00GIXJSJSN4OXA FOREIGN KEY(F_FOO) REFERENCES PUBLIC.SA_FOO(F_ID) NOCHECK;        
ALTER TABLE PUBLIC.SA_EXTENSION_ADVANCED_TREE ADD CONSTRAINT PUBLIC.FK_IQT2IERQTBRBWE2L2SG4PKMVN FOREIGN KEY(F_PARENT_ID) REFERENCES PUBLIC.SA_EXTENSION_ADVANCED_TREE(F_ID) NOCHECK;          
ALTER TABLE PUBLIC.ZDA_FORM_TODO_USER ADD CONSTRAINT PUBLIC.FK_80XNX3DNOP92HSXPW22SBI1K5 FOREIGN KEY(F_USER_ID) REFERENCES PUBLIC.SA_FORM_USER(F_ID) NOCHECK;  
ALTER TABLE PUBLIC.ZDA_FORM_TODO_USER ADD CONSTRAINT PUBLIC.FK_GV6NCVA4IQ9O037UU29RUE2V6 FOREIGN KEY(F_TODO_ID) REFERENCES PUBLIC.SA_FORM_TODO(F_ID) NOCHECK;  
ALTER TABLE PUBLIC.SA_FOO ADD CONSTRAINT PUBLIC.FK_9V73JAOS7BS87TIYD3X3OC33E FOREIGN KEY(ATTACHMENT_ID) REFERENCES PUBLIC.CDE_ATTACHMENT(F_ID) NOCHECK;        
ALTER TABLE PUBLIC.SA_FIELD_TAG ADD CONSTRAINT PUBLIC.FK_9RKVK8POXA75M17DOJXJAP2YP FOREIGN KEY(F_PARENT) REFERENCES PUBLIC.SA_FIELD_TAG(F_ID) NOCHECK;         
ALTER TABLE PUBLIC.CDE_MENUITEM ADD CONSTRAINT PUBLIC.FK_H2B6B8M4XPFWHQ7YWUW69LX84 FOREIGN KEY(F_PARENT_ID) REFERENCES PUBLIC.CDE_MENUITEM(F_ID) NOCHECK;      
ALTER TABLE PUBLIC.CDE_DEPARTMENT ADD CONSTRAINT PUBLIC.FK_42VF1LBF0WBM1CF55NEKDPTQE FOREIGN KEY(F_PARENT_ID) REFERENCES PUBLIC.CDE_DEPARTMENT(F_ID) NOCHECK;  
ALTER TABLE PUBLIC.SA_TODO ADD CONSTRAINT PUBLIC.FK_I05NVV4TL05GMB9OQOUQ3NKCO FOREIGN KEY(F_BASICUSER) REFERENCES PUBLIC.SA_USER(F_ID) NOCHECK;
ALTER TABLE PUBLIC.ZDA_FIELD_TODO_USER ADD CONSTRAINT PUBLIC.FK_E12LA1F338OYC8XHDGNE9W2BU FOREIGN KEY(F_TODO_ID) REFERENCES PUBLIC.SA_FIELD_TODO(F_ID) NOCHECK;
ALTER TABLE PUBLIC.SA_BAR ADD CONSTRAINT PUBLIC.FK_C24KYE2M9Y1A7J3C44VVLJ87U FOREIGN KEY(F_PARENT) REFERENCES PUBLIC.SA_BAR(F_ID) NOCHECK;   

create table ACT_ID_GROUP (
    ID_ varchar(64),
    REV_ integer,
    NAME_ varchar(255),
    TYPE_ varchar(255),
    primary key (ID_)
);

create table ACT_ID_MEMBERSHIP (
    USER_ID_ varchar(64),
    GROUP_ID_ varchar(64),
    primary key (USER_ID_, GROUP_ID_)
);

create table ACT_ID_USER (
    ID_ varchar(64),
    REV_ integer,
    FIRST_ varchar(255),
    LAST_ varchar(255),
    EMAIL_ varchar(255),
    PWD_ varchar(255),
    PICTURE_ID_ varchar(64),
    primary key (ID_)
);

create table ACT_ID_INFO (
    ID_ varchar(64),
    REV_ integer,
    USER_ID_ varchar(64),
    TYPE_ varchar(64),
    KEY_ varchar(255),
    VALUE_ varchar(255),
    PASSWORD_ longvarbinary,
    PARENT_ID_ varchar(255),
    primary key (ID_)
);

alter table ACT_ID_MEMBERSHIP
    add constraint ACT_FK_MEMB_GROUP
    foreign key (GROUP_ID_)
    references ACT_ID_GROUP;

alter table ACT_ID_MEMBERSHIP
    add constraint ACT_FK_MEMB_USER
    foreign key (USER_ID_)
    references ACT_ID_USER;


create table ACT_GE_PROPERTY (
    NAME_ varchar(64),
    VALUE_ varchar(300),
    REV_ integer,
    primary key (NAME_)
);

insert into ACT_GE_PROPERTY
values ('schema.version', '5.15.1', 1);

insert into ACT_GE_PROPERTY
values ('schema.history', 'create(5.15.1)', 1);

insert into ACT_GE_PROPERTY
values ('next.dbid', '1', 1);

create table ACT_GE_BYTEARRAY (
    ID_ varchar(64),
    REV_ integer,
    NAME_ varchar(255),
    DEPLOYMENT_ID_ varchar(64),
    BYTES_ longvarbinary,
    GENERATED_ bit,
    primary key (ID_)
);

create table ACT_RE_DEPLOYMENT (
    ID_ varchar(64),
    NAME_ varchar(255),
    CATEGORY_ varchar(255),
    TENANT_ID_ varchar(255) default '',
    DEPLOY_TIME_ timestamp,
    primary key (ID_)
);

create table ACT_RE_MODEL (
    ID_ varchar(64) not null,
    REV_ integer,
    NAME_ varchar(255),
    KEY_ varchar(255),
    CATEGORY_ varchar(255),
    CREATE_TIME_ timestamp,
    LAST_UPDATE_TIME_ timestamp,
    VERSION_ integer,
    META_INFO_ varchar(4000),
    DEPLOYMENT_ID_ varchar(64),
    EDITOR_SOURCE_VALUE_ID_ varchar(64),
    EDITOR_SOURCE_EXTRA_VALUE_ID_ varchar(64),
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_RU_EXECUTION (
    ID_ varchar(64),
    REV_ integer,
    PROC_INST_ID_ varchar(64),
    BUSINESS_KEY_ varchar(255),
    PARENT_ID_ varchar(64),
    PROC_DEF_ID_ varchar(64),
    SUPER_EXEC_ varchar(64),
    ACT_ID_ varchar(255),
    IS_ACTIVE_ bit,
    IS_CONCURRENT_ bit,
    IS_SCOPE_ bit,
    IS_EVENT_SCOPE_ bit,
    SUSPENSION_STATE_ integer,
    CACHED_ENT_STATE_ integer,
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_RU_JOB (
    ID_ varchar(64) NOT NULL,
    REV_ integer,
    TYPE_ varchar(255) NOT NULL,
    LOCK_EXP_TIME_ timestamp,
    LOCK_OWNER_ varchar(255),
    EXCLUSIVE_ boolean,
    EXECUTION_ID_ varchar(64),
    PROCESS_INSTANCE_ID_ varchar(64),
    PROC_DEF_ID_ varchar(64),
    RETRIES_ integer,
    EXCEPTION_STACK_ID_ varchar(64),
    EXCEPTION_MSG_ varchar(4000),
    DUEDATE_ timestamp,
    REPEAT_ varchar(255),
    HANDLER_TYPE_ varchar(255),
    HANDLER_CFG_ varchar(4000),
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_RE_PROCDEF (
    ID_ varchar(64) NOT NULL,
    REV_ integer,
    CATEGORY_ varchar(255),
    NAME_ varchar(255),
    KEY_ varchar(255) NOT NULL,
    VERSION_ integer NOT NULL,
    DEPLOYMENT_ID_ varchar(64),
    RESOURCE_NAME_ varchar(4000),
    DGRM_RESOURCE_NAME_ varchar(4000),
    DESCRIPTION_ varchar(4000),
    HAS_START_FORM_KEY_ bit,
    SUSPENSION_STATE_ integer,
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_RU_TASK (
    ID_ varchar(64),
    REV_ integer,
    EXECUTION_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    PROC_DEF_ID_ varchar(64),
    NAME_ varchar(255),
    PARENT_TASK_ID_ varchar(64),
    DESCRIPTION_ varchar(4000),
    TASK_DEF_KEY_ varchar(255),
    OWNER_ varchar(255),
    ASSIGNEE_ varchar(255),
    DELEGATION_ varchar(64),
    PRIORITY_ integer,
    CREATE_TIME_ timestamp,
    DUE_DATE_ timestamp,
    CATEGORY_ varchar(255),
    SUSPENSION_STATE_ integer,
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_RU_IDENTITYLINK (
    ID_ varchar(64),
    REV_ integer,
    GROUP_ID_ varchar(255),
    TYPE_ varchar(255),
    USER_ID_ varchar(255),
    TASK_ID_ varchar(64),
    PROC_INST_ID_ varchar(64) null,
    PROC_DEF_ID_ varchar(64),
    primary key (ID_)
);

create table ACT_RU_VARIABLE (
    ID_ varchar(64) not null,
    REV_ integer,
    TYPE_ varchar(255) not null,
    NAME_ varchar(255) not null,
    EXECUTION_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    TASK_ID_ varchar(64),
    BYTEARRAY_ID_ varchar(64),
    DOUBLE_ double,
    LONG_ bigint,
    TEXT_ varchar(4000),
    TEXT2_ varchar(4000),
    primary key (ID_)
);

create table ACT_RU_EVENT_SUBSCR (
    ID_ varchar(64) not null,
    REV_ integer,
    EVENT_TYPE_ varchar(255) not null,
    EVENT_NAME_ varchar(255),
    EXECUTION_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    ACTIVITY_ID_ varchar(64),
    CONFIGURATION_ varchar(255),
    CREATED_ timestamp not null,
    PROC_DEF_ID_ varchar(64),
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create index ACT_IDX_EXEC_BUSKEY on ACT_RU_EXECUTION(BUSINESS_KEY_);
create index ACT_IDX_TASK_CREATE on ACT_RU_TASK(CREATE_TIME_);
create index ACT_IDX_IDENT_LNK_USER on ACT_RU_IDENTITYLINK(USER_ID_);
create index ACT_IDX_IDENT_LNK_GROUP on ACT_RU_IDENTITYLINK(GROUP_ID_);
create index ACT_IDX_EVENT_SUBSCR_CONFIG_ on ACT_RU_EVENT_SUBSCR(CONFIGURATION_);
create index ACT_IDX_VARIABLE_TASK_ID on ACT_RU_VARIABLE(TASK_ID_);
create index ACT_IDX_ATHRZ_PROCEDEF on ACT_RU_IDENTITYLINK(PROC_DEF_ID_);

alter table ACT_GE_BYTEARRAY
    add constraint ACT_FK_BYTEARR_DEPL
    foreign key (DEPLOYMENT_ID_)
    references ACT_RE_DEPLOYMENT;

alter table ACT_RE_PROCDEF
    add constraint ACT_UNIQ_PROCDEF
    unique (KEY_,VERSION_, TENANT_ID_);
    
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION;

alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PARENT
    foreign key (PARENT_ID_)
    references ACT_RU_EXECUTION;
    
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_SUPER 
    foreign key (SUPER_EXEC_) 
    references ACT_RU_EXECUTION;
    
alter table ACT_RU_EXECUTION
    add constraint ACT_FK_EXE_PROCDEF 
    foreign key (PROC_DEF_ID_) 
    references ACT_RE_PROCDEF (ID_);    
    
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_TSKASS_TASK
    foreign key (TASK_ID_)
    references ACT_RU_TASK;

alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_ATHRZ_PROCEDEF
    foreign key (PROC_DEF_ID_)
    references ACT_RE_PROCDEF;
    
alter table ACT_RU_IDENTITYLINK
    add constraint ACT_FK_IDL_PROCINST
    foreign key (PROC_INST_ID_) 
    references ACT_RU_EXECUTION (ID_);       

alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION;

alter table ACT_RU_TASK
    add constraint ACT_FK_TASK_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION;

alter table ACT_RU_TASK
  add constraint ACT_FK_TASK_PROCDEF
  foreign key (PROC_DEF_ID_)
  references ACT_RE_PROCDEF;

alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_EXE
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION;

alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_PROCINST
    foreign key (PROC_INST_ID_)
    references ACT_RU_EXECUTION;

alter table ACT_RU_VARIABLE
    add constraint ACT_FK_VAR_BYTEARRAY
    foreign key (BYTEARRAY_ID_)
    references ACT_GE_BYTEARRAY;

alter table ACT_RU_JOB
    add constraint ACT_FK_JOB_EXCEPTION
    foreign key (EXCEPTION_STACK_ID_)
    references ACT_GE_BYTEARRAY;

alter table ACT_RU_EVENT_SUBSCR
    add constraint ACT_FK_EVENT_EXEC
    foreign key (EXECUTION_ID_)
    references ACT_RU_EXECUTION;

alter table ACT_RE_MODEL 
    add constraint ACT_FK_MODEL_SOURCE 
    foreign key (EDITOR_SOURCE_VALUE_ID_) 
    references ACT_GE_BYTEARRAY (ID_);

alter table ACT_RE_MODEL 
    add constraint ACT_FK_MODEL_SOURCE_EXTRA 
    foreign key (EDITOR_SOURCE_EXTRA_VALUE_ID_) 
    references ACT_GE_BYTEARRAY (ID_);
    
alter table ACT_RE_MODEL 
    add constraint ACT_FK_MODEL_DEPLOYMENT 
    foreign key (DEPLOYMENT_ID_) 
    references ACT_RE_DEPLOYMENT (ID_);        

create table ACT_HI_PROCINST (
    ID_ varchar(64) not null,
    PROC_INST_ID_ varchar(64) not null,
    BUSINESS_KEY_ varchar(255),
    PROC_DEF_ID_ varchar(64) not null,
    START_TIME_ timestamp not null,
    END_TIME_ timestamp,
    DURATION_ bigint,
    START_USER_ID_ varchar(255),
    START_ACT_ID_ varchar(255),
    END_ACT_ID_ varchar(255),
    SUPER_PROCESS_INSTANCE_ID_ varchar(64),
    DELETE_REASON_ varchar(4000),
    TENANT_ID_ varchar(255) default '',
    primary key (ID_),
    unique (PROC_INST_ID_)
);

create table ACT_HI_ACTINST (
    ID_ varchar(64) not null,
    PROC_DEF_ID_ varchar(64) not null,
    PROC_INST_ID_ varchar(64) not null,
    EXECUTION_ID_ varchar(64) not null,
    ACT_ID_ varchar(255) not null,
    TASK_ID_ varchar(64),
    CALL_PROC_INST_ID_ varchar(64),
    ACT_NAME_ varchar(255),
    ACT_TYPE_ varchar(255) not null,
    ASSIGNEE_ varchar(255),
    START_TIME_ timestamp not null,
    END_TIME_ timestamp,
    DURATION_ bigint,
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_HI_TASKINST (
    ID_ varchar(64) not null,
    PROC_DEF_ID_ varchar(64),
    TASK_DEF_KEY_ varchar(255),
    PROC_INST_ID_ varchar(64),
    EXECUTION_ID_ varchar(64),
    NAME_ varchar(255),
    PARENT_TASK_ID_ varchar(64),
    DESCRIPTION_ varchar(4000),
    OWNER_ varchar(255),
    ASSIGNEE_ varchar(255),
    START_TIME_ timestamp not null,
    CLAIM_TIME_ timestamp,
    END_TIME_ timestamp,
    DURATION_ bigint,
    DELETE_REASON_ varchar(4000),
    PRIORITY_ integer,
    DUE_DATE_ timestamp,
    FORM_KEY_ varchar(255),
    CATEGORY_ varchar(255),
    TENANT_ID_ varchar(255) default '',
    primary key (ID_)
);

create table ACT_HI_VARINST (
    ID_ varchar(64) not null,
    PROC_INST_ID_ varchar(64),
    EXECUTION_ID_ varchar(64),
    TASK_ID_ varchar(64),
    NAME_ varchar(255) not null,
    VAR_TYPE_ varchar(100),
    REV_ integer,
    BYTEARRAY_ID_ varchar(64),
    DOUBLE_ double,
    LONG_ bigint,
    TEXT_ varchar(4000),
    TEXT2_ varchar(4000),
    CREATE_TIME_ timestamp,
    LAST_UPDATED_TIME_ timestamp,
    primary key (ID_)
);

create table ACT_HI_DETAIL (
    ID_ varchar(64) not null,
    TYPE_ varchar(255) not null,
    TIME_ timestamp not null,
    NAME_ varchar(255),
    PROC_INST_ID_ varchar(64),
    EXECUTION_ID_ varchar(64),
    TASK_ID_ varchar(64),
    ACT_INST_ID_ varchar(64),
    VAR_TYPE_ varchar(255),
    REV_ integer,
    BYTEARRAY_ID_ varchar(64),
    DOUBLE_ double,
    LONG_ bigint,
    TEXT_ varchar(4000),
    TEXT2_ varchar(4000),
    primary key (ID_)
);

create table ACT_HI_COMMENT (
    ID_ varchar(64) not null,
    TYPE_ varchar(255),
    TIME_ timestamp not null,
    USER_ID_ varchar(255),
    TASK_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    ACTION_ varchar(255),
    MESSAGE_ varchar(4000),
    FULL_MSG_ longvarbinary,
    primary key (ID_)
);

create table ACT_HI_ATTACHMENT (
    ID_ varchar(64) not null,
    REV_ integer,
    USER_ID_ varchar(255),
    NAME_ varchar(255),
    DESCRIPTION_ varchar(4000),
    TYPE_ varchar(255),
    TASK_ID_ varchar(64),
    PROC_INST_ID_ varchar(64),
    URL_ varchar(4000),
    CONTENT_ID_ varchar(64),
    primary key (ID_)
);
create table ACT_HI_IDENTITYLINK (
    ID_ varchar(64),
    GROUP_ID_ varchar(255),
    TYPE_ varchar(255),
    USER_ID_ varchar(255),
    TASK_ID_ varchar(64),
    PROC_INST_ID_ varchar(64) null,
    primary key (ID_)
);

create index ACT_IDX_HI_PRO_INST_END on ACT_HI_PROCINST(END_TIME_);
create index ACT_IDX_HI_PRO_I_BUSKEY on ACT_HI_PROCINST(BUSINESS_KEY_);
create index ACT_IDX_HI_ACT_INST_START on ACT_HI_ACTINST(START_TIME_);
create index ACT_IDX_HI_ACT_INST_END on ACT_HI_ACTINST(END_TIME_);
create index ACT_IDX_HI_DETAIL_PROC_INST on ACT_HI_DETAIL(PROC_INST_ID_);
create index ACT_IDX_HI_DETAIL_ACT_INST on ACT_HI_DETAIL(ACT_INST_ID_);
create index ACT_IDX_HI_DETAIL_TIME on ACT_HI_DETAIL(TIME_);
create index ACT_IDX_HI_DETAIL_NAME on ACT_HI_DETAIL(NAME_);
create index ACT_IDX_HI_DETAIL_TASK_ID on ACT_HI_DETAIL(TASK_ID_);
create index ACT_IDX_HI_PROCVAR_PROC_INST on ACT_HI_VARINST(PROC_INST_ID_);
create index ACT_IDX_HI_PROCVAR_NAME_TYPE on ACT_HI_VARINST(NAME_, VAR_TYPE_);
create index ACT_IDX_HI_ACT_INST_PROCINST on ACT_HI_ACTINST(PROC_INST_ID_, ACT_ID_);
create index ACT_IDX_HI_IDENT_LNK_USER on ACT_HI_IDENTITYLINK(USER_ID_);
create index ACT_IDX_HI_IDENT_LNK_TASK on ACT_HI_IDENTITYLINK(TASK_ID_);
create index ACT_IDX_HI_IDENT_LNK_PROCINST on ACT_HI_IDENTITYLINK(PROC_INST_ID_);

create index ACT_IDX_HI_ACT_INST_EXEC on ACT_HI_ACTINST(EXECUTION_ID_, ACT_ID_);    
